const express = require('express');
const router = express.Router();
const remediationService = require('../services/remediationService');

/**
 * @route   POST /api/remediation/apply
 * @desc    Apply automated fixes for vulnerabilities
 * @access  Public
 */
router.post('/apply', async (req, res) => {
  try {
    const { vulnerabilityId, recommendationId } = req.body;
    
    if (!vulnerabilityId || !recommendationId) {
      return res.status(400).json({ 
        success: false,
        error: 'Vulnerability ID and recommendation ID are required' 
      });
    }
    
    const result = await remediationService.applyFix(vulnerabilityId, recommendationId);
    
    res.status(200).json({
      success: true,
      data: result
    });
  } catch (error) {
    console.error('Remediation error:', error);
    res.status(500).json({
      success: false,
      error: 'Failed to apply remediation',
      message: error.message
    });
  }
});

/**
 * @route   GET /api/remediation/history
 * @desc    Get remediation history
 * @access  Public
 */
router.get('/history', async (req, res) => {
  try {
    const history = await remediationService.getRemediationHistory();
    
    res.status(200).json({
      success: true,
      data: history
    });
  } catch (error) {
    console.error('Error fetching remediation history:', error);
    res.status(500).json({
      success: false,
      error: 'Failed to fetch remediation history',
      message: error.message
    });
  }
});

/**
 * @route   POST /api/remediation/verify
 * @desc    Verify if a remediation was successful
 * @access  Public
 */
router.post('/verify', async (req, res) => {
  try {
    const { remediationId } = req.body;
    
    if (!remediationId) {
      return res.status(400).json({ 
        success: false,
        error: 'Remediation ID is required' 
      });
    }
    
    const verificationResult = await remediationService.verifyRemediation(remediationId);
    
    res.status(200).json({
      success: true,
      data: verificationResult
    });
  } catch (error) {
    console.error('Verification error:', error);
    res.status(500).json({
      success: false,
      error: 'Failed to verify remediation',
      message: error.message
    });
  }
});

module.exports = router;